@startuml

class ChatGUI {
    - file_path : String
    - root : tk.TK
    - customFont : font.Font
    - scrollbar : tk.Scrollbar
    - chat_history : tk.Text
    - user_input_field = tk.Entry
    - send_button = tk.Button
    
    + respond_to_user(event : None) : void
}

class OpenAI {   
    - openai.api_key : String
    - hidden_bus_key : String
    - prompt_list : List<String>
    - select_prompt_mode : String
    - data_prompt : List<String>
    - messages : List<Dictionary>

    + answer(user_content : String) : text/assistant_content
    + execute_bus_track(void) : void    
}

class Prompting{
    + csv_to_txt(menu_csv_filename, notice_csv_filename, scehdule_csv_filename, txt_filename : String, new_column_order : List<String>) : void
}

class PNU_Crawling {
    - condition : Bool
    - response : requests.get
    - url : String
    - soup : BeautifulSoup
      
    + connect(void) : soup
    + make_csv_file(category : String, df : DataFrame)    
}

class storage { 
    - script_csv_pairs : Dictionary
    - csv_modification_date : datetime.fromtimestamp.date
    - current_date : datetime.now.date
    - command : String
    - menu_csv_filename : String
    - notice_csv_filename : String
    - scehdule_csv_filename : String
    - txt_filename : String
    - new_column_order : List<String>    
}

class Notice {
    - category : String
    - url : String
    - date_list : List<String>
    - notice_list : List<String>
    - target : soup.find 

    + targetid(void) : target
    + collect_data() : date_list, notice_list
    + sort_data(void) : void     
}

class Schedule {
    - category : String
    - url : String
    - data_list : List<List<String>>    

    + find_section() : schedule_section
    + find_list() : schedule_list
    + find_data() : scehdule_data
    + sort_data() : void   
}

class menu {
    - meal_times : List<String>
    - csv_file_path : String
    - csv_writer : csv.writer
    - current_date : datetime.now
    - target_date : datetime.now.striftime
    - meal_url : String
    - menu_info : String
    - target_date : datetime.now.striftime

    + get_meal_url_for_date(meal_time : List<String>, target_date : datetime.now.striftime) : url
    + get_menu_info(item_title : String) : menu_string, meal_type
    + crawl_menu_info(url : String) : soup.find_all
    + write_to_csv(csv_writer : csv.writer, menu_info : String, target_date : datetime.now.striftime, meal_time : String) : void
}

class BusanMap {
    - gmaps_key : String
    - bus_api_key : String
    - gmaps : googlemaps.Client
    - titles : String
    - attr : String
    - bus_info : List<String, List<int>, Bool, Bool, int>
    
    + get_bus_info(line_id : String) : bus_info
    + generate_map(center : List<int>, zoom_start : int)
}

ChatGUI "1" -- "1" OpenAI : provide answer <
Prompting "1" -- "1" OpenAI : provide PDSPrompt.txt file >
Prompting "1" -- "1" storage : provide csv files <

PNU_Crawling "1" - "1"  storage : provide notice.csv/schedule.csv file > 
storage "1" -- "1" menu : provide menu.csv file <
PNU_Crawling <|-- Notice : provide notice data 
PNU_Crawling <|-- Schedule : provide schedule data


OpenAI "1" -- "1" BusanMap : provide map data <

@enduml


